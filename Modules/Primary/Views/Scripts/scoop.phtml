<div class="container-fluid">
    
    <p><label>Routing</label> Starting with a Route name. A fresh install starts with three routes. The <code>Primary</code>, <code>Error</code>
    and <code>Home</code> routes. These routes consist of a module name.<br/><code>Primary.Module = 'Primary';</code>,
    <code>Error.Module = 'Primary';</code> and <code>Home.Module = 'Primary';</code> These starter routes like all routes
    need a controller name. To start there is <code>Primary.Controller = 'Pages';</code>, <code>Error.Controller = 'Error';</code>,
    and <code>Home.Controller = 'Pages';</code>. Next there will be the action name. The starter routes have <code>home</code>,
    and <code>error</code> as the actions. Finally the route pattern. </p>
    <p><label>Route Patterns</label> always start with <code>/</code> next come's either a label or segment. Labels are simply named url segments that have no variables attached. They are used to create unique route patterns.
    A segment consist of two phrases seperated by a colon. <code>Label1:var1</code> or <code>:var2</code> will work.
    Notice the the first phrase [left side ie(<code>Label1:</code>)] is optional. If used it will set a url label segment
    ie(<code>Label1</code>). The second phrase [right side ie(<code>:var1</code>] is required and is used to set a variable <code>var1</code> with in the controller.</p>
    Each new segment and label need to be separated with <code>/</code>.
    ie(<code>Home.Route.Pattern = '/Label1:var1/:var2';</code>)
</div>